test: #nom de la campagne
  graine: [0]
  constellation: [ kuiper_630 ] # name will be inflated from files chosen in this directory
  duree: [ 6 ] #en s
  pas: [2000] #en ms
  isls: [ isls_plus_grid ]
  # examples of ISL deteriorators
  #      { sel: topUtil10, errModel: "gilbertElliottMdl-brstRate:0.01-brstSize:5-interval:20000,26000ms" }, 
  #      { sel: topUtil10, errModel: "brstErrMdl-brstRate:0.01-brstSize:5-interval:20000,26000ms" },
  #      { sel: topUtil10, errModel: "recvErrRate:0.1-interval:20000,26000ms"}
  #      {} # pas de déterioration, équivalent à commenter "casse liens sat" dans les actions
  deteriorISL: [ {} ] #, { sel: topUtil50, errModel: "gilbertElliottMdl-brstRate:0.01-brstSize:5-interval:15000,21000ms"}, { sel: topUtil50, errModel: "gilbertElliottMdl-brstRate:0.001-brstSize:5-interval:15000,21000ms"} ] #, { sel: topUtil10, errModel: "gilbertElliottMdl-brstRate:0.01-brstSize:5" } ] 
  nb-UEs-sol: [ 5 ]
  algo: [ "algorithm_penal_gsl" ]
  threads: [ 4 ]
  debit-if-isl: [ 20 ] #[ 3, 10 ] #Mb/s
  debit-if-gsl: [ {'ue':2, 'gateway':150, 'satellite':80} ] #Mb/s #ex: {'ue':1, 'gateway':20, 'satellite':5} 
  logs-actifs: [ ['rx', 'tx', 'drop', 'coms', 'ping'] ] #('rx', 'tx', 'drop', 'coms', 'ping') # 'drop' callbacks won't be effective when Traffic Control is set 
  estimDelai: [{"isl": 5, 'gsl': 4, 'extremite': 20 }, {"isl": 5, 'gsl': 4, 'extremite': 80 }, {"isl": 10, 'gsl': 8, 'extremite': 80 }]

  ##------------------
  # satellite_network_min_node_log: rx log only 1st station and satellites
  ##-----------------
  # examples of protocoles:
  # { 'nom':"udp", "extra_parameters":"expInterPacket" }
  # { 'nom':"udp"}
  # { 'nom': "tcp"}
  # { 'nom': 'udp', 'debut_ms': [1, 4],'duree_ms': 'min,max'
  protocoles: 
    - base: {'nom': "tcp", 'debut_ms':[0, 1000], 'duree_ms': 'max', "nb": 200, 'debit': 2 }
      terBrusque: {nom: udp, debut_ms: 20000, duree_ms: max, nb: 100, debit: 2}
    - base: {'nom': "tcp", 'debut_ms':[0, 1000], 'duree_ms': 'max', "nb": 200, 'debit': 2 }
      terDoux: {nom: udp, debut_ms: [20000, 25000], duree_ms: max, nb: 100, debit: 2}
    - base: {'nom': "tcp", 'debut_ms':[0, 1000], 'duree_ms': 'max', "nb": 270, 'debit': 2 }
      dxmBrusque: {nom: udp, debut_ms: 20000, duree_ms: max, nb: 30, debit: 2}
    - base: {'nom': "tcp", 'debut_ms':[0, 1000], 'duree_ms': 'max', "nb": 270, 'debit': 2 }
      dxmDoux: {nom: udp, debut_ms: [20000, 25000], duree_ms: max, nb: 30, debit: 2}
  # Dans UDP, le debit (par défaut le débit de la plus petite interface du premier ENDPOINT dans le fichier de constellation)
  # Le débits des commmodités UDP sont dérivés aléatoirement de celui-ci par 0.3*debit_reference+0.7*random_exponential(0.7*debit_reference)
  # Cela donne une distribution exponentialle décalée coupée de débit moyen 0.3*debit+debit*(1-exp(-0.7)) = 0.8*debit
  # in UDP, 'debit' is capped to debit_gsl
  # a tcp flow is defined by its size, which is calculated with debit and duree_ms
  # Débit UDP : max(udp_list_flow_size_proportion[i], 0.999*data_rate_GSL_megabit_per_s))
  # Dans TCP l'argument de débit sert à calculer la taille du fichier à envoyer
  # extra_parameters : string, thought as space-separated coefficients
  # pacingDR[double][unit or default to bit per sec] is an application level throttle, it only takes into account the payload
  srvTrafficControl:
    #- QueueDisc: "ns3::RRFQueueDisc" #ns3::ITbfQueueDisc, ns3::RRQueueDisc, etc..ns3::FifoQueueDisc par defaut 
    #  MaxSize: QueueSize 30p #type value
    #  ChildQueueDisc: "ns3::FifoQueueDisc"
    #  ChildRate: DataRate 2Mbps # in TbfQueueDisc #Child prefix is removed to set the attribute of the ChildQueueDisc
    - {"QueueDisc": "ns3::FqCoDelQueueDisc", "MaxSize": "QueueSize 100p", "Interval": "String 10ms", "Target": "String 100ms"} 
    - {}
    #- {"QueueDisc": "ns3::FqCoDelQueueDisc", "MaxSize": "QueueSize 60p", "Interval": "String 300ms", "Target": "String 200ms"} 

info-sauvegarde:
  strdate: '%Y-%m-%d-%H%M'
  campagnedir: "sauvegardes/{nom_campagne}"
  expedir: "svgde_{strdate}_{graine}"
  sources: #select information that should be saved at the end of the experiment
    #directory: files or directory
    #"satgenpy_analysis/data/{constellation}_{isls}_{algo}/{pas}ms_for_{duree}s/": manual
    "satellite_networks_state/gen_data/{constellation}_{isls}_{algo}": ground_stations.txt
    "satellite_networks_state/gen_data/{constellation}_{isls}_{algo}/dynamic_state_{pas}ms_for_{duree}s": paths
    ns3_experiments/runs: "run_loaded_tm_pairing_for_{duree}s_with_{protocolesNom}_{algo}"
    config: [ "courante.*", ".*{constellation}.*"] # ^(?!campagne).*$ #all but starting with campagne
    satellite_networks_state: commodites.temp
  #currinfo: currlog #pour savoir où on en est, si lancé en arrière-plan

actions: #[]
  - noeuds
  - commodites
  - routes
  #- "casse liens sat"
  #- "analyse theorique"
  - simulation
